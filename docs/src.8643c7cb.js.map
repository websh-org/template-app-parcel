{"version":3,"sources":["app.js","../node_modules/@websh/remote-slave-port/remote-slave-port.mjs","../node_modules/@websh/web-shell-app/web-shell-app.mjs","../app-manifest.json","web-shell-app.js","index.js"],"names":["window","editor","document","getElementById","RemoteSlavePort","constructor","id","_port","_manifest","_commands","_handlers","_receive","cmd","args","rsvp","throw","res","result","transfer","concat","postMessage","re","error","message","String","data","_connect","ev","source","parent","port","manifest","removeEventListener","onmessage","addEventListener","m","on","fn","push","command","trigger","event","WebShellApp","module","exports","v","name","short_name","version","icon","description","license","homepage","repository","issues","api","file","new","open","save","formats","text","extension","type","accept","value","format","content","reason"],"mappings":"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","file":"src.8643c7cb.js","sourceRoot":"../src","sourcesContent":["window.editor = document.getElementById(\"editor\");\n","export class RemoteSlavePort {\n  constructor(id) {\n    this._port = null;\n    this._manifest = {};\n    this._commands = {};\n    this._handlers = {};\n\n    const _receive = async ({ cmd, args, rsvp }) => {\n      try {\n        if (!cmd) {\n          this.throw(\"slave-specify-command\");\n        }\n        if (!this._commands[cmd]) {\n          this.throw(\"slave-no-such-command\");\n        }\n        const res = await this._commands[cmd](args);\n        const [result, transfer] = [].concat(res);\n        this._port.postMessage({ result, re: rsvp }, transfer)\n      } catch (error) {\n        this._port.postMessage({ error: error.error| error.message || String(error), data:error.data || {}, re: rsvp })\n      }\n    }\n\n    const _trigger = async (ev, data) => {\n      for (var h in this._handlers[ev]) {\n        this._handlers[ev][h](data);\n      }\n    }\n\n    const _connect = (ev) => {\n      if (ev.source !== window.parent) return;\n      if (!ev.data || !ev.data.port || !ev.data[id] === 'connect') return;\n      this._port = ev.data.port;\n      this._port.postMessage({ [id]: 'connected', manifest: this._manifest })\n      window.removeEventListener('message', _connect);\n      this._port.onmessage = ev => {\n        _receive(ev.data);\n      }\n    }\n\n    window.addEventListener('message', _connect);\n  }\n\n  manifest(m) {\n    this._manifest = m;\n    return this;\n  }\n\n  on(ev, fn) {\n    this._handlers[ev] = this._handlers[ev] || [];\n    this._handlers[ev].push(fn);\n    return this;\n  }\n\n  command(cmd, fn) {\n    this._commands[cmd] = fn;\n    return this;\n  }\n\n  trigger(event, data = {}) {\n    port.postMessage({ event, data });\n    return this;\n  }\n\n  throw(error, data = {}) {\n    throw { error, data }\n  }\n}\n","import { RemoteSlavePort } from \"@websh/remote-slave-port\";\nexport const WebShellApp = new RemoteSlavePort('SOUTH-TOOTH');\nWebShellApp.command('proc-close',()=>true);","module.exports={v:0,name:\"Parcel Example App\",short_name:\"Parcel Example\",version:\"0.0.1\",icon:\"icon.svg\",description:\"The Parcel example app for WebShell \",license:\"MIT\",homepage:\"https://github.com/websh-org/template-app-parcel#readme\",repository:\"https://github.com/websh-org/template-app-parcel.git\",issues:\"https://github.com/websh-org/template-app-parcel/issues\",api:{file:{new:\"text\",open:[\"text\"],save:[\"text\"],formats:{text:{name:\"Text File\",extension:\"txt\",type:\"text/plain\",accept:\"text/*\"}}}}};","import { WebShellApp } from \"@websh/web-shell-app\";\nimport manifest from \"../app-manifest.json\";\n\nWebShellApp.manifest(manifest);\n\nWebShellApp.command(\"file-new\", function () {\n  editor.value = \"\"\n})\n\nWebShellApp.command(\"file-open\", function ({ format, content, type, extension }) {\n  // you can do different things here based on the type, format and extansion\n\n  if (type === \"text/html\") {\n    this.throw(\"file-cannot-open\", {\n      reason: \"This is not a HTML editor.\"\n    })\n  }\n\n  editor.value = content\n})\n\nWebShellApp.command(\"file-save\", async function ({ format }) {\n  // you can do different things here based on the format \n  // we dont't really need async/await here, we're just using \n  // it to demonstrate \n  return await { content: editor.value };\n})\n","import \"./app.js\"\nimport \"./web-shell-app.js\"\n\nwindow.editor = document.getElementById(\"editor\");\n"]}